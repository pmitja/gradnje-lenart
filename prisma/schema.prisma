// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL_UNPOOLED")
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  password      String?
  role          UserRole  @default(USER)
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model VerificationToken {
  id        String   @id @default(cuid())
  email     String?
  token     String   @unique
  expiresAt DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id        String   @id @default(cuid())
  email     String
  token     String   @unique
  expiresAt DateTime

  @@unique([email, token])
}

model Location {
  id          Int          @id @default(autoincrement())
  name        String
  description String
  address     String
  city        String
  slug        String       @unique
  images      String[]
  realEstates RealEstate[] @relation("LocationRealEstate")
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  type        String
}

model RealEstate {
  id           String   @id @default(cuid())
  name         String
  description  String?
  number       String?
  floor        String?
  size         Float?
  priceWithTax Float?
  price        Float?
  images       String[]
  locationId   Int
  status       String?
  slug         String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  location     Location @relation(fields: [locationId], references: [id], onDelete: Cascade, name: "LocationRealEstate")
}
